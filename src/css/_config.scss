//------------------------------------//
//  $RESET
//------------------------------------//
$reset-mode: true !default;


//------------------------------------//
//  $ANIMATE
//------------------------------------//
// Importar animações
$animate-mode: false !default;
// @import '_animate';
// .button {
// 	@extend .animated;
// 
// 	&:hover {
// 		background-color: #ccc;
// 		@include singleTransition(500);
// 	}
// }


//------------------------------------//
//  $DEBUG
//------------------------------------//
// Enabling debug mode allows for potential issues 
// to be visually displayed in the browser. 
$debug-mode: false !default;
// @import '_debug';


//------------------------------------//
//  $FONTS
//------------------------------------//
@font-face {
	font-family: 'icons';
	src: url('../fonts/icons.eot');
	src: url('../fonts/icons.eot?#iefix') format('embedded-opentype'),
		 url('../fonts/icons.woff') format('woff'),
		 url('../fonts/icons.ttf') format('truetype'),
		 url('../fonts/icons.svg#icons') format('svg');
	font-weight:normal;
	font-style:normal;
}
@font-face {
	font-family: 'lato-light-italic';
	src: url('../fonts/lato-light-italic.eot');
	src: url('../fonts/lato-light-italic.eot?#iefix') format('embedded-opentype'),
		 url('../fonts/lato-light-italic.woff') format('woff'),
		 url('../fonts/lato-light-italic.ttf') format('truetype'),
		 url('../fonts/lato-light-italic.svg#lato-light-italic') format('svg');
	font-weight:normal;
	font-style:normal;
}




$latoLightItalic:	'lato-light-italic', Arial, Helvetica, sans-serif !default;
$arial:				Arial, Helvetica, sans-serif !default;


$h1-size: 36px !default;
$h2-size: 30px !default;
$h3-size: 24px !default;
$h4-size: 20px !default;
$h5-size: 16px !default;
$h6-size: 14px !default;

//------------------------------------//
//  $BASE
//------------------------------------//
// Base font sizes and colors
$base-font-size:    16px !default;
$base-line-height:  24px !default;
$base-font-color:   #65655d !default;
$base-link-color:   #62b3e7 !default;

// Base font-family
$base-font-family: $arial;

// Element spacing and line-height ratio
$base-spacing-unit: $base-line-height !default;
$half-spacing-unit: $base-spacing-unit / 2 !default;
$line-height-ratio: $base-line-height / $base-font-size;


//------------------------------------//
//  $VARIAVÉIS
//------------------------------------//
// Background colors

$bg-white:        #ffffff !default;
$bg-black:        #222222 !default;
$bg-light-gray:   #f9f9f9 !default;
$bg-gray:         #999999 !default;
$bg-light-green:  #68ad45 !default;
$bg-green:        #5cb85c !default;
$bg-light-blue:   #d9edf7 !default;
$bg-blue:         #5bc0de !default;
$bg-light-yellow: #fcf8e3 !default;
$bg-yellow:       #ed9c28 !default;
$bg-light-red:    #f2dede !default;
$bg-red:          #d9534f !default;


// Type colors
$color-white:     #ffffff !default;
$color-black:     #222222 !default;
$color-gray:      #999999 !default;
$color-green:     #68ad45 !default;
$color-blue:      #3a87ad !default;
$color-red:       #d2322d !default;
$color-yellow: 	  #c09853 !default;
$color-dark-gray: #2e373c !default;
$color-silver:    #b8b8b8 !default;


//------------------------------------//
//  $RESPONSIVE
//------------------------------------//
// Breakpoints
$extra-small-start: 30em !default;
$small-start:       48em !default;
$medium-start:      60em !default;
$large-start:       70em !default;
$extra-large-start: 80em !default;


//------------------------------------//
//  $EXTENDS
//------------------------------------//
%wFull {
-webkit-box-sizing: border-box;
   -moz-box-sizing: border-box;
	-ms-box-sizing: border-box;
	 -o-box-sizing: border-box;
		box-sizing: border-box;
}

%single-transition {
-webkit-transition: all 300ms ease-out;
   -moz-transition: all 300ms ease-out;
	-ms-transition: all 300ms ease-out;
	 -o-transition: all 300ms ease-out;
		transition: all 300ms ease-out;
}










//------------------------------------//
//  $MIXINGS
//------------------------------------//

// Passing in a single value will create font-sizing in pixels, rems as well as a proper line-height.
// @include font-size(24px);
/*
@mixin font-size($font-size, $line-height:true, $font-size-price:$base-font-size) {
	font-size: $font-size;
	font-size: ($font-size / $font-size-price) * 1em;

	@if $line-height == true {
		line-height: ceil($font-size / $base-line-height) * ($base-line-height / $font-size);

	}
}
*/

@function calculateRem($size) {
	$remSize: $size / 16px;
	@return $remSize * 1rem;
}
@mixin font-size($size) {
	font-size: $size;
	font-size: calculateRem($size);
}




// Proper vendor prefixes are created just by passing a property value and size value.
//    `@include vendor(border-radius, 4px);`    `@include vendor(background-size, cover);`
@mixin vendor($property, $value) {
-webkit-#{$property}: $value;
   -moz-#{$property}: $value;
	-ms-#{$property}: $value;
	 -o-#{$property}: $value;
		#{$property}: $value;
}

@mixin singleTransition($time: 250) {
-webkit-transition: all #{$time}ms ease-out;
   -moz-transition: all #{$time}ms ease-out;
	-ms-transition: all #{$time}ms ease-out;
	 -o-transition: all #{$time}ms ease-out;
		transition: all #{$time}ms ease-out;
}

@mixin opacity($value){
	$IEValue: $value*100;
	 -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=$IEValue)";
		 filter: alpha(opacity=$IEValue);
   -moz-opacity: $value;
 -khtml-opacity: $value;
		opacity: $value;
}

@mixin replaceText ($bg-img, $x, $y) {
	background: transparent url($bg-img) $x $y no-repeat;
	overflow: hidden;
	text-indent: -99999cm;
}

@mixin simpleGradient($from-color, $to-color) {
	background-color: mix($from-color, $to-color); /* Fallback */
	background: -webkit-gradient(linear, 0% 0%, 0% 100%, from($from-color), to($to-color));
	background: -webkit-linear-gradient(to bottom, $from-color 0%, $to-color 100%); 
	background:    -moz-linear-gradient(to bottom, $from-color 0%, $to-color 100%);
	background:     -ms-linear-gradient(to bottom, $from-color 0%, $to-color 100%);
	background:      -o-linear-gradient(to bottom, $from-color 0%, $to-color 100%);
	background:         linear-gradient(to bottom, $from-color 0%, $to-color 100%);
	-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$from-color}', EndColorStr='#{$to-color}')";
}



//
// By passing in one of the pre-defined media queries that 
// are packaged with Concise by default, you can easily 
// create styles that are built from the ground-up to be 
// mobile friendly.
// 
//    `@include breakpoint(extra-small) { [styles here] }`
// 
// 
@mixin breakpoint($point) {
	@if $point == extra-small {
		@media (min-width: $extra-small-start)  { @content; }
	}

	@else if $point == small {
		@media (min-width: $small-start)  { @content; }
	}

	@else if $point == medium {
		@media (min-width: $medium-start) { @content; }
	}

	@else if $point == large {
		@media (min-width: $large-start) { @content; }
	}

	@else if $point == extra-large {
		@media (min-width: $extra-large-start) { @content; }
	}

	@else if $point == high-density { 
		@media only screen and (-webkit-min-device-pixel-ratio: 1.5),
			   only screen and (min--moz-device-pixel-ratio: 1.5),
			   only screen and (-o-min-device-pixel-ratio: 3/2),
			   only screen and (min-device-pixel-ratio: 1.5) { @content; }
	}
}



// http://www.youtube.com/watch?v=umDr0mPuyQc

// @mixin btn ($px) {
// 	@extend %radius;
// 	background: $primary-color;
// 	box-shadow: 0 5px #d95303;
// 	color: #fff;
// 	display: block;
// 	font-family: $heading-font;
// 	font-size: 16px;
// 	padding: 12px 0;
// 	position: relative;
// 	-webkit-transition: none;
// 	-moz-transition: none;
// 	transition: none;
// 	text-align: center;
// 	top: 0;
// 	width: $px;

// 	&:hover {
// 		box-shadow: 0 3px #d95303;
// 		top: 2px;
// 	}

// 	&:active {
// 		box-shadow: 0 0 #d95303;
// 		top: 5px;
// 	}
// }

// %shadow {
// 	-webkit-text-shadow: 1px 1px #fff;
// 	-moz-text-shadow: 1px 1px #fff;
// 	text-shadow: 1px 1px #fff;
// }
